package up_info_bdda_iz_ha;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.nio.ByteBuffer;

public class DiskManager {
	
	private static DiskManager DiskManager;
	
	private DiskManager() {}
	
	public static DiskManager getInstance() {
		if(DiskManager==null) {
			DiskManager = new DiskManager();
		}
		
		return DiskManager;
	}
	
	public static void CreateFile(int fileIdx) throws IOException {
		
		RandomAccessFile file = new RandomAccessFile(DBParams.dbPath+ "/Data_"+fileIdx+".rf", "rw");	
		file.close();
		/*FileWriter file = new FileWriter(DBParams.dbPath+ "/Data_"+fileIdx+".rf");
		file.close();*/
	}
	
	public static PageId AddPage(int fileIdx) throws IOException {
		
		RandomAccessFile raf = new RandomAccessFile(new File(DBParams.dbPath+ "/Data_"+fileIdx+".rf"),"rw");
		
		
		long longueurFichier = raf.length();
		//doute sur cette longueur !!? int idPage = (int)(longueurFichier/DBParams.pageSize)-1;
		int idPage = (int)(longueurFichier/DBParams.pageSize);
		raf.seek((long)longueurFichier);
		for (int i=0; i<DBParams.pageSize; i++){
			raf.writeByte(0);
		}
		raf.close();
		
		return new PageId(fileIdx,idPage);
		
			
	}
	
	public static void ReadPage(PageId pageId, ByteBuffer buff ) throws IOException {
		
		RandomAccessFile raf = new RandomAccessFile(DBParams.dbPath+"/Data_"+pageId.getFileIdx()+".rf", "r");
		raf.seek(pageId.getPageIdx()* DBParams.pageSize);
		raf.read(buff.array());
		raf.close();
		
	}
	
	public static void WritePage(PageId pageId, ByteBuffer buff ) throws IOException {
		
		RandomAccessFile raf = new RandomAccessFile(DBParams.dbPath+"/Data_"+pageId.getFileIdx()+".rf", "w");
		raf.seek(pageId.getPageIdx()* DBParams.pageSize);
		raf.write(buff.array());
		raf.close();
		
	}
	
	

}
